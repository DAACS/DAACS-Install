#!/bin/bash
current_dir="$(dirname $0)"

if [ "$current_dir" = "." ]; then 
    current_dir=`pwd`
fi

source "$current_dir/instance_helpers/colors.sh"

main(){
        
step1_option=$(pretty_read "
Type ${Color_Off}${Red}ctrl+c${Color_Off}  or type ${Red}quit${Color_Off} to exit\n
1 - Install system dependencies\n
2 - Create system users\n
3 - Create/Update/Refresh instance\n
4 - Reset service\n
5 - Install daacs command in path\n\n
Select an option: ")

    if [ "$step1_option" = "" ]; then
        echo "must select an option"
    fi


    if [ "$step1_option" = "quit" ]; then
        echo "Good bye"
        exit 1
    fi


    case "$step1_option" in
    "1") 
        clear
        source "$current_dir/DAACS-system-install.sh"

    ;;

    "2") 
        clear
        source "$current_dir/create_system_instance_users.sh"

    ;;

    "3") 
        clear
        source "$current_dir/create_daacs_instance.sh"

    ;;

    "4") 
        clear
        source "$current_dir/instance_helpers/basic.sh"
    
        service_name=$(ask_read_question_or_try_again "Service name?: " true)
        stagger_amount=$(ask_read_question_or_try_again "How many services to restart at once?: " true)

        if [[ ! $stagger_amount =~ ^[0-9]+$ ]] ; then
            
            printf "Stagger amount must be a number\n"
        else
            restart_services_with_stagger_by_service_name "$service_name" "$stagger_amount"
        fi
    ;;
    "5")


        home_directory=""
        if [ -z "${HOME}" ];
        then 
            home_directory="/home/$USER"
            echo "export HOME=${home_directory}" >> $HOME/.bashrc
            else
            home_directory="$HOME"

        fi 

        if grep -wq "$current_dir" "$home_directory/.bashrc"
        then
            $(pretty_read "${Color_Off}${Red}daacs${Color_Off} command already installed...")
        else
        
            $(pretty_read "${Color_Off}${Red}daacs${Color_Off} command installed now...")
            command="PATH=$current_dir:$PATH"
            echo "$command" >> $HOME/.bashrc

        fi
    ;;

    *)
        echo "Invalid option"
        main

    ;;
    esac
    main

}



helpFunction()
{
   echo ""
   echo "Usage: $0 -f refresh -s service_name -a 2 -q true "
   echo -e "\t-f Function to run (refresh)"
   echo -e "\t-s Service name to run function on"
   echo -e "\t-a The amount of times to sequence function"
   echo -e "\t-q Quite mode: (Output or no output )"
   exit 1 # Exit script after printing help
}

while getopts "f:s:a:q" opt
do
   case "$opt" in
      f ) parameterF="$OPTARG" ;;
      s ) parameterS="$OPTARG" ;;
      a ) parameterA="$OPTARG" ;;
      q ) parameterQ="$OPTARG" ;;
      ? ) helpFunction ;; # Print helpFunction in case parameter is non-existent
   esac
done

#example ./daacs -f refresh -s testweb -a 2
if  [[ -z "$parameterF" ]] && [[ -z "$parameterS" ]];
then
    main
else

    if [[ "$parameterA" == "" ]]; then
        parameterA=1
    fi


    if [[ "$parameterQ" == "true" ]]; then
        parameterQ=true
    elif [[ "$parameterQ" == "false" ]]; then
        parameterQ=false
    else
        parameterQ=true
    fi

    # Begin script in case all parameters are correct
    if [[ "$parameterS" == "" ]]  ; then
        helpFunction
    else
        printf "Running reset on ${parameterS} \n"
        source "$current_dir/instance_helpers/basic.sh"
        restart_services_with_stagger_by_service_name "$parameterS" "$parameterA" $parameterQ
    fi
fi



exit 1



